package m;

import java.util.concurrent.RecursiveTask;
import java.util.function.DoublePredicate;

public class ForkJoinTest {
	public static void main(String[] args) {

	}

	class Counter extends RecursiveTask<Integer> {
		public static final int THRESHOLD = 1000;
		private double[] values;
		private int from;
		private int to;
		private DoublePredicate filter;

		public Counter(double[] values, int from, int to, DoublePredicate filter) {
			this.values = values;
			this.from = from;
			this.to = to;
			this.filter = filter;
		}

		@Override
		protected Integer compute() {
			if (to - from < THRESHOLD) {

			} else {
				int mid = from + (to - from) / 2;
			}
			return null;
		}

	}
}
