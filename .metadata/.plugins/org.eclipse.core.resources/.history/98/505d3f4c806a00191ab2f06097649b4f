package h;
/**
 * 阻塞队列解决并发编程中的线程安全问题
 * @author 14792
 *
 */

import java.io.File;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

public class BlockingQueueTest {
	private static final int FILE_QUEUE_SIZE = 10;
	private static final int SEARCH_THREADS = 100;
	private static final File DUMMY = new File("");
	private static BlockingQueue<File> queue = new ArrayBlockingQueue<>(FILE_QUEUE_SIZE);
	
	public static void main(String[] args) {
		
	}
	
	public static void emurate(File directory) throws InterruptedException{
		File[] files = directory.listFiles();
		
		for (File file : files) {
			if (!file.isDirectory()) {
				queue.put(file);
			}else {
				emurate(directory);
			}
		}
	}
	
	public static void search(File file, String keyWord) {
		tr
	}
}
